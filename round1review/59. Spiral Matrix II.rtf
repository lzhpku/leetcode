{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public int[][] generateMatrix(int n) \{\
        int[][] ret = new int[n][n];\
        for(int i = 0; i < n; i ++)\
            for(int j = 0; j < n; j ++)\
                ret[i][j] = 0;\
        int count = 1, x = 0, y = 0, dx = 1, dy = 1;\
        int cur = 2;\
        while(count <= n * n)\
        \{\
            if(ret[x][y] == 0)\
                ret[x][y] = count;\
            if(cur == 1)\
            \{\
                if(x + dx >= 0 && x + dx < n && ret[x + dx][y] == 0)\
                \{\
                    x = x + dx;\
                \}\
                else\
                \{\
                    y = y + dy;\
                    dx = -1 * dx;\
                    cur = 2;\
                \}\
            \}\
            else if(cur == 2)\
            \{\
                if(y + dy >= 0 && y + dy < n && ret[x][y + dy] == 0)\
                \{\
                    y = y + dy;\
                \}\
                else\
                \{\
                    x = x + dx;\
                    dy = -1 * dy;\
                    cur = 1;\
                \}\
            \}\
            count ++;\
        \}\
        return ret;\
    \}\
\}}