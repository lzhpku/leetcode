{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) \{\
        int m = nums1.size(), n = nums2.size();\
        if(m > n)\
            return findMedianSortedArrays(nums2, nums1);\
        int left = 0, right = m, num1 = 0, num2 = 0, mid = (m + n + 1) / 2, i = 0, j = 0;\
        while(left <= right) \{\
            i = (left + right) / 2;\
            j = mid - i;\
            if(i < m && j > 0 && nums2[j - 1] > nums1[i])\
                left = i + 1;\
            else if(i > 0 && j < n && nums2[j] < nums1[i - 1])\
                right = i - 1;\
            else \{\
                if(i == 0)\
                    num1 = nums2[j - 1];\
                else if(j == 0)\
                    num1 = nums1[i - 1];\
                else\
                    num1 = max(nums1[i - 1], nums2[j - 1]);\
                break;\
            \}\
        \}\
        if((m + n) & 1)\
            return num1;\
        if(i == m)\
            num2 = nums2[j];\
        else if(j == n)\
            num2 = nums1[i];\
        else\
            num2 = min(nums1[i], nums2[j]);\
        return (num1 + num2) / 2.0;\
    \}\
\};}