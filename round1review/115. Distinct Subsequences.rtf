{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public int numDistinct(String s, String t) \{\
        int [][] dp = new int [t.length() + 1][s.length() + 1];\
        for(int i = 0; i < t.length() + 1; i ++)\
            dp[i][0] = 0;\
        for(int i = 0; i < s.length() + 1; i ++)\
            dp[0][i] = 1;\
        for(int j = 1; j < s.length() + 1; j ++)\
            for(int i = 1; i < t.length() + 1; i ++)\
                dp[i][j] = dp[i][j - 1] + (s.charAt(j - 1) == t.charAt(i - 1) ? dp[i - 1][j - 1] : 0);\
        return dp[t.length()][s.length()];\
    \}\
\}}