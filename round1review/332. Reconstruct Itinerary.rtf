{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    vector<string> ret;\
    map<string, multiset<string>> hash;\
    \
    vector<string> findItinerary(vector<pair<string, string>> tickets) \{\
        for(int i = 0; i < tickets.size(); i ++)\
            hash[tickets[i].first].insert(tickets[i].second);\
        visit("JFK");\
        reverse(ret.begin(), ret.end());\
        return ret;\
    \}\
    \
    void visit(string s) \{\
        while(hash[s].size() > 0) \{\
            string t = *(hash[s].begin());\
            hash[s].erase(hash[s].begin());\
            visit(t);\
        \}\
        ret.push_back(s);\
    \}\
\};}