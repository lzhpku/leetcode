{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public int divide(int dividend, int divisor) \{\
        if(divisor == 0 || (dividend == Integer.MIN_VALUE && divisor == -1))\
            return Integer.MAX_VALUE;\
        int sign = (((dividend < 0) ^ (divisor < 0)) ? -1 : 1);\
        long dvd = Math.abs((long)dividend);\
        long dvs = Math.abs((long)divisor);\
        if(dvd < dvs)\
            return 0;\
        if(sign == 1)\
            return (int)(dvd / dvs);\
        else\
            return (int)(-dvd / dvs);\
        // int pos = 0;\
        // long temp = dvs;\
        // while(temp <= dvd) \{\
        //     pos ++;\
        //     temp = temp << 1;\
        // \}\
        // int ret = 0;\
        // while(dvd >= dvs) \{\
        //     pos --;\
        //     if(pos >= 0)\
        //     	temp = temp >> 1;\
        //     if(dvd >= temp) \{\
        //         dvd -= temp;\
        //         ret += (1 << pos);\
        //     \}\
        // \}\
        // return sign == 1 ? ret : -ret;\
    \}\
\}}