{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Java Iterator interface reference:\
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\
class PeekingIterator implements Iterator<Integer> \{\
\
    private Integer next = null;\
    private Iterator<Integer> iter;\
\
	public PeekingIterator(Iterator<Integer> iterator) \{\
	    // initialize any member here.\
	    iter = iterator;\
	    if(iter.hasNext())\
	        next = iter.next();\
	\}\
\
    // Returns the next element in the iteration without advancing the iterator.\
	public Integer peek() \{\
        return next;\
	\}\
\
	// hasNext() and next() should behave the same as in the Iterator interface.\
	// Override them if needed.\
	@Override\
	public Integer next() \{\
	    Integer ret = next;\
	    next = (iter.hasNext() ? iter.next() : null);\
	    return ret;\
	\}\
\
	@Override\
	public boolean hasNext() \{\
	    return next != null;\
	\}\
\}}