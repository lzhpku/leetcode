{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    void gameOfLife(vector<vector<int>>& board) \{\
        for(int i = 0; i < board.size(); i ++) \{\
            for(int j = 0; j < board[0].size(); j ++) \{\
                int lives = countLives(board, i, j);\
                if((board[i][j] & 1) == 1 && lives >= 2 && lives <= 3)\
                    board[i][j] = 3;\
                if((board[i][j] & 1) == 0 && lives == 3)\
                    board[i][j] = 2;\
            \}\
        \}\
        for(int i = 0; i < board.size(); i ++)\
            for(int j = 0; j < board[0].size(); j ++)\
                board[i][j] >>= 1;\
    \}\
    \
    int countLives(vector<vector<int>>& board, int x, int y) \{\
        int ret = 0;\
        for(int i = max(0, x - 1); i <= min((int)board.size() - 1, x + 1); i ++)\
            for(int j = max(0, y - 1); j <= min((int)board[0].size() - 1, y + 1); j ++)\
                ret += (board[i][j] & 1);\
        ret -= (board[x][y] & 1);\
        return ret;\
    \}\
\};}