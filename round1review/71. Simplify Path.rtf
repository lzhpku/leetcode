{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public String simplifyPath(String path) \{\
        if(path.equals("/../"))\
            return "/";\
        String temp[] = path.split("/");\
        ArrayList<String> stack = new ArrayList<String>();\
        int cur = 0;\
        for(int i = 0; i < temp.length; i ++)\
        \{\
            if(temp[i].equals(".") || temp[i].equals(""))\
                continue;\
            if(temp[i].equals(".."))\
            \{\
                cur --;\
                if(cur < 0)\
                    cur = 0;\
            \}\
            else\
            \{\
                if(cur < stack.size())\
                    stack.set(cur, temp[i]);\
                else\
                    stack.add(temp[i]);\
                cur ++;\
            \}\
        \}\
        String ret = new String();\
        for(int i = 0; i < cur; i ++)\
            ret = ret + "/" + stack.get(i);\
        if(ret.equals(""))\
            ret = "/";\
        return ret;\
    \}\
\}}