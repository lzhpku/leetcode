{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    int firstMissingPositive(vector<int>& nums) \{\
        int n = nums.size();\
        for(int i = 0; i < n; i ++) \{\
            while(nums[i] > 0 && nums[i] < n && nums[nums[i] - 1] != nums[i])\
                swap(nums[i], nums[nums[i] - 1]);\
        \}\
        for(int i = 0; i < n; i ++) \{\
            if(nums[i] - 1 != i)\
                return i + 1;\
        \}\
        return n + 1;\
    \}\
\};}