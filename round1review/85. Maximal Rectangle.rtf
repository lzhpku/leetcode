{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    int maximalRectangle(vector<vector<char>>& matrix) \{\
        if(matrix.empty() || matrix[0].empty())\
            return 0;\
        int n = matrix.size(), m = matrix[0].size();\
        vector<int> h(m + 1, 0);\
        int ret = 0;\
        \
        for(int i = 0; i < n; i ++) \{\
            vector<int> temp;\
            for(int j = 0; j < m + 1; j ++) \{\
                if(j < m) \{\
                    if(matrix[i][j] == '1')\
                        h[j] ++;\
                    else\
                        h[j] = 0;\
                \}\
                while(temp.size() > 0 && h[temp.back()] > h[j]) \{\
                    int height = h[temp.back()];\
                    temp.pop_back();\
                    int width = temp.size() > 0 ? temp.back() : -1;\
                    int sum = height * (j - width - 1);\
                    ret = sum > ret ? sum : ret;\
                \}\
                temp.push_back(j);\
            \}\
        \}\
        return ret;\
    \}\
\};}