{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    vector<string> ret;\
    vector<string> restoreIpAddresses(string s) \{\
        calcu(s, 0, 0, "");\
        return ret;\
    \}\
    \
    void calcu(string s, int start, int n, string temp) \{\
        if(n == 4) \{\
            if(start == s.size())\
                ret.push_back(temp.substr(0, temp.size() - 1));\
            return;\
        \}\
        for(int i = 1; i <= 3 && start + i <= s.size(); i ++) \{\
            int num = atoi(s.substr(start, i).c_str());\
            if(num < 256 && i == to_string(num).size()) \{\
                calcu(s, start + i, n + 1, temp + s.substr(start, i) + ".");\
            \}\
        \}\
    \}\
\};}