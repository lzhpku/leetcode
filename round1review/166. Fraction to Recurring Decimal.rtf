{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public String fractionToDecimal(int numerator, int denominator) \{\
        if(numerator == 0)\
            return "0";\
        String ret = "";\
        if((numerator < 0) ^ (denominator < 0))\
            ret += "-";\
        long n = Math.abs((long)numerator), d = Math.abs((long)denominator);\
        ret += String.valueOf(n / d);\
        if(n % d == 0)\
            return ret;\
        ret += ".";\
        HashMap <Long, Integer> map = new HashMap <Long, Integer>();\
        for(long i = n % d; i > 0; i = i % d) \{\
            if(map.containsKey(i)) \{\
                int index = map.get(i);\
                ret = ret.substring(0, index) + "(" + ret.substring(index);\
                ret += ")";\
                break;\
            \}\
            map.put(i, ret.length());\
            i = i * 10;\
            ret = ret + String.valueOf(i / d);\
        \}\
        return ret;\
    \}\
\}}