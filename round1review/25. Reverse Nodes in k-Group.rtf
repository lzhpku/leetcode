{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* reverseKGroup(ListNode* head, int k) \{\
        ListNode* cur = head;\
        int count = 0;\
        while(cur != NULL && count < k) \{\
            cur = cur -> next;\
            count ++;\
        \}\
        if(count == k) \{\
            cur = reverseKGroup(cur, k);\
            while(count -- > 0) \{\
                ListNode* temp = head -> next;\
                head -> next = cur;\
                cur = head;\
                head = temp;\
            \}\
            head = cur;\
        \}\
        return head;\
    \}\
\};}