{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
\
vector<int> ret;\
\
int bsearch(int len, int value) \{\
    int l = 0, r = len;\
    while(l <= r) \{\
        int m = (l + r) / 2;\
        if(value == ret[m])\
        	return m;\
        else if(value < ret[m])\
            r = m - 1;\
        else\
            l = m + 1;\
    \}\
    return l;\
\}\
\
    int lengthOfLIS(vector<int>& nums) \{\
        int cur = -1;\
        for(int i = 0; i < nums.size(); i ++) \{\
            int index = bsearch(cur, nums[i]);\
            //cout << index << ' ' << cur << endl;\
            if(index > cur) \{\
                ret.push_back(nums[i]);\
                cur ++;\
            \}\
            else\
                ret[index] = nums[i];\
            // for(int i = 0; i < ret.size(); i ++)\
            // 	cout << ret[i] << ' ';\
            // cout << endl;\
        \}\
        return cur + 1;\
    \}\
\};}