{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) \{\
        if(k < 1 || t < 0)\
            return false;\
        map<long, long> m;\
        for(int i = 0; i < nums.size(); i ++) \{\
            long num = (long)nums[i] - INT_MIN;\
            long bucket = num / ((long) t + 1);\
            if(m.find(bucket) != m.end()\
                || (m.find(bucket - 1) != m.end() && num - m[bucket - 1] <= t)\
                || (m.find(bucket + 1) != m.end() && m[bucket + 1] - num <= t))\
                return true;\
            if(m.size() >= k) \{\
                long bucket = ((long) nums[i - k] - INT_MIN) / ((long) t + 1);\
                m.erase(bucket);\
            \}\
            m[bucket] = num;\
        \}\
        return false;\
    \}\
\};}