{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) \{\
        ListNode* ret = new ListNode(0), * temp = ret;\
        int carry = 0;\
        while(l1 != NULL && l2 != NULL) \{\
            temp -> next = new ListNode((carry + l1 -> val + l2 -> val) % 10);\
            carry = (carry + l1 -> val + l2 -> val) / 10;\
            temp = temp -> next;\
            l1 = l1 -> next;\
            l2 = l2 -> next;\
        \}\
        while(l1 != NULL) \{\
            temp -> next = new ListNode((carry + l1 -> val) % 10);\
            carry = (carry + l1 -> val) / 10;\
            temp = temp -> next;\
            l1 = l1 -> next;\
        \}\
        while(l2 != NULL) \{\
            temp -> next = new ListNode((carry + l2 -> val) % 10);\
            carry = (carry + l2 -> val) / 10;\
            temp = temp -> next;\
            l2 = l2 -> next;\
        \}\
        if(carry > 0)\
            temp -> next = new ListNode(carry);\
        return ret -> next;\
    \}\
\};}