{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * struct TreeNode \{\
 *     int val;\
 *     TreeNode *left;\
 *     TreeNode *right;\
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    bool isSymmetric(TreeNode* root) \{\
        if(root == NULL)\
            return true; \
        return judge(root -> left, root -> right);\
    \}\
    \
    bool judge(TreeNode* n1, TreeNode* n2) \{\
        if(n1 == NULL && n2 == NULL)\
            return true;\
        if(n1 == NULL || n2 == NULL)\
            return false;\
        return (n1 -> val == n2 -> val) && judge(n1 -> left, n2 -> right) && judge(n1 -> right, n2 -> left);\
    \}\
\};}