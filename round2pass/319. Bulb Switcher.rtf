{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
/*\
A bulb ends up on iff it is switched an odd number of times.\
\
Bulb i is switched in round d iff d divides i. So bulb i ends up on iff it has an odd number of divisors.\
\
Divisors come in pairs, like i=12 has divisors 1 and 12, 2 and 6, and 3 and 4. Except if i is a square, like 36 has divisors 1 and 36, 2 and 18, 3 and 12, 4 and 9, and double divisor 6. So bulb i ends up on iff and only if i is a square.\
\
So just count the square numbers.\
\
reference\
*/\
public:\
    int bulbSwitch(int n) \{\
        return sqrt(n);\
    \}\
\};}