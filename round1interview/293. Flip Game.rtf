{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person will be the winner.\
\
Write a function to compute all possible states of the string after one valid move.\
\
For example, given s = "++++", after one move, it may become one of the following states:\
\
[\
  "--++",\
  "+--+",\
  "++--"\
]\
\
class Solution \{\
public:\
    vector<string> generatePossibleNextMoves(string s) \{\
        vector<string> ret;\
        int len = s.size();\
        for(int i = 0; i < len - 1; i ++) \{\
            if(s[i] == s[i + 1] && s[i] == '+') \{\
                s[i] = s[i + 1] = '-';\
                ret.push_back(s);\
                s[i] = s[i + 1] = '+';\
            \}\
        \}\
        return ret;\
    \}\
\};}