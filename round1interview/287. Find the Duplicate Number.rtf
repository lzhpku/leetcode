{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public int findDuplicate(int[] nums) \{\
        int slow = nums[0];\
        int fast = nums[nums[0]];\
        while(slow != fast) \{\
            slow = nums[slow];\
            fast = nums[nums[fast]];\
        \}\
        fast = 0;\
        while(slow != fast) \{\
            slow = nums[slow];\
            fast = nums[fast];\
        \}\
        return slow;\
    \}\
\}}