{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    int countRangeSum(vector<int>& nums, int lower, int upper) \{\
        int n = nums.size();\
        vector<long> sum(n + 1, 0);\
        for(int i = 1; i <= n; i ++)\
            sum[i] = sum[i - 1] + nums[i - 1];\
        return merge(sum, lower, upper, 0, n);\
    \}\
    \
    int merge(vector<long>& sum, int lower, int upper, int start, int end) \{\
        if(start >= end)\
            return 0;\
        int mid = (start + end) / 2;\
        int count = merge(sum, lower, upper, start, mid) + merge(sum, lower, upper, mid + 1, end);\
        int j = mid + 1, k = mid + 1, t = mid + 1;\
        vector<long> cache(end - start + 1, 0);\
        for(int i = start, r = 0; i <= mid; i ++) \{\
            while(j <= end && sum[j] - sum[i] <= upper) j ++;\
            while(k <= end && sum[k] - sum[i] < lower) k ++;\
            while(t <= end && sum[t] < sum[i]) cache[r ++] = sum[t ++];\
            cache[r ++] = sum[i];\
            count += j - k;\
        \}\
        for(int i = start; i < t; i ++)\
            sum[i] = cache[i - start];\
        return count;\
    \}\
\};}