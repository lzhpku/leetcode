{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.\
\
For example,\
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].\
\
Given word1 = \'93coding\'94, word2 = \'93practice\'94, return 3.\
Given word1 = "makes", word2 = "coding", return 1.\
\
\
class Solution \{\
public:\
    int shortestDistance(vector<string>& words, string word1, string word2) \{\
        int p1 = -1, p2 = -1, ret = INT_MAX;\
        for(int i = 0; i < words.size(); i ++) \{\
            if(words[i] == word1)\
                p1 = i;\
            if(words[i] == word2)\
                p2 = i;\
            if (p1 != -1 && p2 != -1)\
                ret = min(ret, abs(p1 - p2));\
        \}\
        return ret;\
    \}\
\};}