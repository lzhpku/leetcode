{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).\
\
Write a function to determine if a number is strobogrammatic. The number is represented as a string.\
\
For example, the numbers "69", "88", and "818" are all strobogrammatic.\
\
class Solution \{\
public:\
    bool isStrobogrammatic(string num) \{\
        unordered_map<char, char> lut\{\{'0', '0'\}, \{'1', '1'\}, \{'6', '9'\}, \{'8', '8'\}, \{'9', '6'\}\};\
        int n = num.length();\
        for (int l = 0, r = n - 1; l <= r; l++, r--)\
            if (lut.find(num[l]) == lut.end() || lut[num[l]] != num[r])\
                return false; \
        return true; \
    \}\
\};}