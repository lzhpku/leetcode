{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Given a binary search tree and a node in it, find the in-order successor of that node in the BST.\
\
Note: If the given node has no in-order successor in the tree, return null.\
\
/**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public TreeNode inorderSuccessor(TreeNode root, TreeNode p) \{\
        \
    \}\
\}\
\
\
Successor\
\
public TreeNode successor(TreeNode root, TreeNode p) \{\
  if (root == null)\
    return null;\
\
  if (root.val <= p.val) \{\
    return successor(root.right, p);\
  \} else \{\
    TreeNode left = successor(root.left, p);\
    return (left != null) ? left : root;\
  \}\
\}\
\
\
Predecessor\
\
public TreeNode predecessor(TreeNode root, TreeNode p) \{\
  if (root == null)\
    return null;\
\
  if (root.val >= p.val) \{\
    return predecessor(root.left, p);\
  \} else \{\
    TreeNode right = predecessor(root.right, p);\
    return (right != null) ? right : root;\
  \}\
\}}