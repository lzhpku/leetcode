{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red14\green115\blue192;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl600\sa200\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reverse bits of a given 32 bits unsigned integer.\
For example, given input 43261596 (represented in binary as 
\b 00000010100101000001111010011100
\b0 ), return 964176192 (represented in binary as 
\b 00111001011110000010100101000000
\b0 ).\

\b Follow up
\b0 :\cb1 \uc0\u8232 \cb3 If this function is called many times, how would you optimize it?\
Related problem: {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/reverse-integer/"}}{\fldrslt \cf4 \strokec4 Reverse Integer}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
class Solution \{\
public:\
    uint32_t reverseBits(uint32_t n) \{\
        n = (n >> 16) | (n << 16);\
        n = ((n & 0xff00ff00) >> 8) | ((n & 0x00ff00ff) << 8);\
        n = ((n & 0xf0f0f0f0) >> 4) | ((n & 0x0f0f0f0f) << 4);\
        n = ((n & 0xcccccccc) >> 2) | ((n & 0x33333333) << 2);\
        n = ((n & 0xaaaaaaaa) >> 1) | ((n & 0x55555555) << 1);\
        return n;\
    \}\
\};}