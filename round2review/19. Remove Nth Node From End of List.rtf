{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* removeNthFromEnd(ListNode* head, int n) \{\
        ListNode * ret = new ListNode(0);\
        ret -> next = head;\
        ListNode * slow = ret, * fast = ret;\
        for(int i = 0; i <= n; i ++)\
            fast = fast -> next;\
        while(fast != NULL) \{\
            slow = slow -> next;\
            fast = fast -> next;\
        \}\
        slow -> next = slow -> next -> next;\
        return ret -> next;\
    \}\
\};\
\
\
\
\
/**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{\
 *         val = x;\
 *         next = null;\
 *     \}\
 * \}\
 */\
public class Solution \{\
    public ListNode removeNthFromEnd(ListNode head, int n) \{\
        if(head.next == null)\
            return null;\
        int length = 0;\
        ListNode ret = head;\
        while(ret != null)\
        \{\
            length ++;\
            ret = ret.next;\
        \}\
        length = length - n + 1;\
        ret = head;\
        while(length > 2)\
        \{\
            ret = ret.next;\
            length --;\
        \}\
        if(length == 1)\
            head = head.next;\
        else\
            ret.next = ret.next.next;\
        return head;\
    \}\
\}}