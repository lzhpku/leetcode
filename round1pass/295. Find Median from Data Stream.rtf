{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class MedianFinder \{\
public:\
    priority_queue<long> s, l;\
    \
    // Adds a number into the data structure.\
    void addNum(int num) \{\
        s.push((long) num);\
        l.push(- s.top());\
        s.pop();\
        if(l.size() > s.size()) \{\
            s.push(- l.top());\
            l.pop();\
        \}\
    \}\
\
    // Returns the median of current data stream\
    double findMedian() \{\
        return s.size() > l.size() ? s.top() : (s.top() - l.top()) / 2.0;\
    \}\
\};\
\
// Your MedianFinder object will be instantiated and called as such:\
// MedianFinder mf;\
// mf.addNum(1);\
// mf.findMedian();}