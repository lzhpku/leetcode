{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Queue \{\
public:\
    stack<int> s;\
    // Push element x to the back of queue.\
    void push(int x) \{\
        stack<int> t;\
        while(!s.empty()) \{\
            t.push(s.top());\
            s.pop();\
        \}\
        s.push(x);\
        while(!t.empty()) \{\
            s.push(t.top());\
            t.pop();\
        \}\
    \}\
\
    // Removes the element from in front of queue.\
    void pop(void) \{\
        s.pop();\
    \}\
\
    // Get the front element.\
    int peek(void) \{\
        return s.top();\
    \}\
\
    // Return whether the queue is empty.\
    bool empty(void) \{\
        return s.empty();\
    \}\
\};}