{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* partition(ListNode* head, int x) \{\
        ListNode* large = new ListNode(0), * small = new ListNode(0);\
        ListNode* l = large, * s = small;\
        while(head != NULL) \{\
            if(head -> val < x) \{\
                s -> next = head;\
                head = head -> next;\
                s = s -> next;\
            \}\
            else \{\
                l -> next = head;\
                head = head -> next;\
                l = l -> next;\
            \}\
        \}\
        s -> next = large -> next;\
        l -> next = NULL;\
        return small -> next;\
    \}\
\};}