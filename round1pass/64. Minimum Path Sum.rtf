{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    int minPathSum(vector<vector<int>>& grid) \{\
        int m = grid.size();\
        int n = grid[0].size();\
        if(m + n == 0)\
            return 0;\
        vector<int> dp(n + 1, 0);\
        for(int i = 1 ; i < n + 1; i ++)\
            dp[i] = dp[i - 1] + grid[0][i - 1];\
        for(int i = 1 ; i < m; i ++) \{\
            dp[1] += grid[i][0];\
            for(int j = 2; j <= n; j ++) \{\
                dp[j] = min(dp[j], dp[j - 1]) + grid[i][j - 1];\
            \}\
        \}\
        return dp[n];\
    \}\
\};}