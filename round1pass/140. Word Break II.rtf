{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    vector<string> wordBreak(string s, unordered_set<string>& wordDict) \{\
        int n = s.size();\
        vector<bool> flag(n + 1, false);\
        flag[0] = true;\
        vector<string> temp;\
        vector<vector<string> > ret(n + 1, temp);\
        for(int i = 1; i <= n; i ++) \{\
            for(int j = 0; j <= i - 1; j ++) \{\
                if(flag[j] && wordDict.find(s.substr(j, i - j)) != wordDict.end()) \{\
                    flag[i] = true;\
                \}\
            \}\
        \}\
        if(!flag[n])\
            return ret[n];\
            \
        for(int i = 1; i < n + 1; i ++)\
            flag[i] = false;\
        flag[0] = true;\
        \
        for(int i = 1; i <= n; i ++) \{\
            for(int j = 0; j <= i - 1; j ++) \{\
                if(flag[j] && wordDict.find(s.substr(j, i - j)) != wordDict.end()) \{\
                    flag[i] = true;\
                    if(ret[j].size() == 0)\
                    	ret[i].push_back(s.substr(j, i - j));\
                    else\
                        for(int k = 0; k < ret[j].size(); k ++) \{\
                            ret[i].push_back(ret[j][k] + " " + s.substr(j, i - j));\
                    \}\
                \}\
            \}\
        \}\
        return ret[n];\
    \}\
\};}