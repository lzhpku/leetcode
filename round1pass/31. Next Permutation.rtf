{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    void nextPermutation(vector<int>& nums) \{\
        int n = nums.size();\
        if(n < 2)\
            return;\
        for(int i = n - 2; i >= 0; i --) \{\
            if(nums[i] < nums[i + 1]) \{\
                for(int j = n - 1; j > i; j --) \{\
                    if(nums[i] < nums[j]) \{\
                        nums[i] = nums[i] ^ nums[j];\
                        nums[j] = nums[j] ^ nums[i];\
                        nums[i] = nums[i] ^ nums[j];\
                        break;\
                    \}\
                \}\
                for(int j = i + 1; j < (n + i + 1) / 2; j ++) \{\
                    nums[j] = nums[j] ^ nums[n - 1 - (j - i - 1)];\
                    nums[n - 1 - (j - i - 1)] = nums[j] ^ nums[n - 1 - (j - i - 1)];\
                    nums[j] = nums[j] ^ nums[n - 1 - (j - i - 1)];\
                \}\
                return;\
            \}\
        \}\
        for(int i = 0; i < n / 2; i ++) \{\
            nums[i] = nums[i] ^ nums[n - 1 - i];\
            nums[n - 1 - i] = nums[n - 1 - i] ^ nums[i];\
            nums[i] = nums[i] ^ nums[n - 1 - i];\
        \}\
    \}\
\};}