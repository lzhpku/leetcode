{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    public boolean wordPattern(String pattern, String str) \{\
        HashMap <String, String> hm = new HashMap <String, String> ();\
        //rhm may be replaced by a HashSet\
        HashMap <String, String> rhm = new HashMap <String, String> ();\
        String [] strs = str.split(" ");\
        if(strs.length != pattern.length())\
        	return false;\
        for(int i = 0; i < strs.length; i ++) \{\
            if(hm.containsKey(String.valueOf(pattern.charAt(i)))) \{\
                if(!strs[i].equals(hm.get(String.valueOf(pattern.charAt(i))))) \{\
                	return false;\
                \}\
            \}\
            //value may contains the same words\
            else if(rhm.containsKey(String.valueOf(strs[i]))) \{\
            	return false;\
            \}\
            else \{\
                hm.put(String.valueOf(pattern.charAt(i)), strs[i]);\
                rhm.put(strs[i], String.valueOf(pattern.charAt(i)));\
            \}\
        \}\
        return true;\
    \}\
\}}