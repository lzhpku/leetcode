{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public int rob(TreeNode root) \{\
        int num [] = dfs(root);\
        return Math.max(num[0], num[1]);\
    \}\
    \
    public int [] dfs(TreeNode root) \{\
        if(root == null)\
            return new int [2];\
        int ret [] = new int [2];\
        int l [] = dfs(root.left);\
        int r [] = dfs(root.right);\
        ret[0] = l[1] + r[1] + root.val;\
        ret[1] = Math.max(l[0], l[1]) + Math.max(r[0], r[1]);\
        return ret;\
    \}\
\}}