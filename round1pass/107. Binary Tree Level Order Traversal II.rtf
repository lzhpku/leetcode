{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * struct TreeNode \{\
 *     int val;\
 *     TreeNode *left;\
 *     TreeNode *right;\
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    vector<vector<int>> levelOrderBottom(TreeNode* root) \{\
        vector<vector<int> > ret;\
        if(root == NULL)\
            return ret;\
        \
        vector<vector<int> > temp;\
        queue<TreeNode *> q;\
        q.push(root);\
        while(!q.empty()) \{\
            vector<int> list;\
            int size = q.size();\
            for(int i = 0; i < size; i ++) \{\
                TreeNode * t = q.front();\
                q.pop();\
                list.push_back(t -> val);\
                if(t -> left != NULL)\
                    q.push(t -> left);\
                if(t -> right != NULL)\
                    q.push(t -> right);\
            \}\
            temp.push_back(list);\
        \}\
        reverse(temp.begin(), temp.end());\
        return temp;\
        // while(!temp.empty()) \{\
        //     ret.push_back(temp.top());\
        //     temp.pop();\
        // \}\
        // return ret;\
    \}\
\};}