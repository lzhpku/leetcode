{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Design and implement a TwoSum class. It should support the following operations: add and find.\
\
add - Add the number to an internal data structure.\
find - Find if there exists any pair of numbers which sum is equal to the value.\
\
For example,\
add(1); add(3); add(5);\
find(4) -> true\
find(7) -> false\
\
\
public class TwoSum \{\
    public HashMap <Integer, Integer> map = new HashMap <Integer, Integer> ();\
    \
    // Add the number to an internal data structure.\
	public void add(int number) \{\
	    map.put(number, map.containsKey(number) ? map.get(number) + 1 : 1);\
	\}\
\
    // Find if there exists any pair of numbers which sum is equal to the value.\
	public boolean find(int value) \{\
	    for(int i : map.keySet()) \{\
	        int j = value - i;\
	        if((i == j && map.get(i) > 1) || (i != j && map.containsKey(j)))\
	            return true;\
	    \}\
	    return false;\
	\}\
\}\
\
\
// Your TwoSum object will be instantiated and called as such:\
// TwoSum twoSum = new TwoSum();\
// twoSum.add(number);\
// twoSum.find(value);}