{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Implement an iterator to flatten a 2d vector.\
\
For example,\
Given 2d vector =\
\
[\
  [1,2],\
  [3],\
  [4,5,6]\
]\
By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,2,3,4,5,6].\
\
Show Hint \
\
\
public class Vector2D \{\
\
    private Iterator<List<Integer>> i;\
    private Iterator<Integer> j;\
\
    public Vector2D(List<List<Integer>> vec2d) \{\
        i = vec2d.iterator();\
    \}\
\
    public int next() \{\
        hasNext();\
        return j.next();\
    \}\
\
    public boolean hasNext() \{\
        while ((j == null || !j.hasNext()) && i.hasNext())\
            j = i.next().iterator();\
        return j != null && j.hasNext();\
    \}\
\}\
\
/**\
 * Your Vector2D object will be instantiated and called as such:\
 * Vector2D i = new Vector2D(vec2d);\
 * while (i.hasNext()) v[f()] = i.next();\
 */}