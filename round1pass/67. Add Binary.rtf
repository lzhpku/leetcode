{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    string addBinary(string a, string b) \{\
        string ret;\
        int carry = 0, lena = a.size(), lenb = b.size();\
        if(lena < lenb) \{\
            string temp = a;\
            a = b;\
            b = temp;\
        \}\
        int i = a.size() - 1, j = b.size() - 1;\
        for(;j >= 0;i --, j --) \{\
            int temp = (a[i] - '0' + b[j] - '0') + carry;\
            carry = temp / 2;\
            ret.insert(ret.begin(), ('0' + (temp % 2)));\
        \}\
        for(;i >= 0; i --) \{\
            int temp = (a[i] - '0') + carry;\
            carry = temp / 2;\
            ret.insert(ret.begin(), ('0' + (temp % 2)));\
        \}\
        if(carry == 1)\
            ret = "1" + ret;\
        return ret;\
    \}\
\};}