{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{\
 *         val = x;\
 *         next = null;\
 *     \}\
 * \}\
 */\
public class Solution \{\
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) \{\
        ListNode ret = new ListNode(0);\
        ListNode temp = ret;\
        while(l1 != null && l2 != null)\
        \{\
            if(l1.val < l2.val)\
            \{\
                temp.next = l1;\
                l1 = l1.next;\
                temp = temp.next;\
            \}\
            else\
            \{\
                temp.next = l2;\
                l2 = l2.next;\
                temp = temp.next;\
            \}\
        \}\
        if(l1 != null)\
            temp.next = l1;\
        if(l2 != null)\
            temp.next = l2;\
        return ret.next;\
    \}\
\}}